image:
  registry: ""
  repository: trinodb/trino
  tag: ""
  digest: ""
  useRepositoryAsSoleImageReference: false
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: registry-credentials

server:
  workers: 2
  node:
    environment: production
    dataDir: /data/trino
    pluginDir: /usr/lib/trino/plugin
  log:
    trino:
      level: INFO
  config:
    path: /etc/trino
    http:
      port: 8080
    https:
      enabled: false
      port: 8443
      keystore:
        path: ""
    authenticationType: ""
    query:
      maxMemory: "4GB"
  exchangeManager:
    name: "filesystem"
    baseDir: "/tmp/trino-local-file-system-exchange-manager"
  workerExtraConfig: ""
  coordinatorExtraConfig: ""
  autoscaling:
    enabled: false
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50
    behavior: {}

accessControl: {}
resourceGroups: {}
additionalNodeProperties: {}
additionalConfigProperties: {}
additionalLogProperties: {}
additionalExchangeManagerProperties: {}
eventListenerProperties: {}

additionalCatalogs:
  iceberg: |-
    connector.name=iceberg
    hive.metastore.uri=thrift://hive-service.metastore:9083
    hive.s3.endpoint=http://minio-service.metastore:9000
    hive.s3.path-style-access=true
    hive.s3.aws-access-key=minio
    hive.s3.aws-secret-key=minio123
    iceberg.file-format=parquet

  delta: |-
    connector.name=delta_lake
    hive.metastore.uri=thrift://hive-service.metastore:9083
    hive.s3.endpoint=http://minio-service.metastore:9000
    hive.s3.path-style-access=true
    hive.s3.aws-access-key=minio
    hive.s3.aws-secret-key=minio123
    delta.enable-non-concurrent-writes=true

  rdbms: |-
    connector.name=postgresql
    connection-url=jdbc:postgresql://postgres-service.metastore:5432/hivemetastore?allowPublicKeyRetrieval=true&amp;useSSL=false&amp;serverTimezone=UTC
    connection-user=metastore
    connection-password=password

env: []
envFrom: []

initContainers: {}

sidecarContainers: {}

securityContext:
  runAsUser: 1000
  runAsGroup: 1000

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

shareProcessNamespace:
  coordinator: false
  worker: false

service:
  type: NodePort
  port: 8080

auth: {}

serviceAccount:
  create: false
  name: ""
  annotations: {}

configMounts: []
secretMounts: []

coordinator:
  jvm:
    maxHeapSize: "8G"
    gcMethod:
      type: "UseG1GC"
      g1:
        heapRegionSize: "32M"

  config:
    memory:
      heapHeadroomPerNode: ""
    query:
      maxMemoryPerNode: "1GB"

  additionalJVMConfig: []
  additionalExposedPorts: {}
  resources: {}
  livenessProbe: {}
  readinessProbe: {}
  lifecycle: {}
  terminationGracePeriodSeconds: 30
  nodeSelector: {}
  tolerations: []
  affinity: {}
  additionalConfigFiles: {}
  additionalVolumes: []
  additionalVolumeMounts: []
  annotations: {}
  labels: {}
  configMounts: []
  secretMounts: []

worker:
  jvm:
    maxHeapSize: "8G"
    gcMethod:
      type: "UseG1GC"
      g1:
        heapRegionSize: "32M"

  config:
    memory:
      heapHeadroomPerNode: ""
    query:
      maxMemoryPerNode: "1GB"

  additionalJVMConfig: []

  additionalExposedPorts: {}

  resources: {}
  livenessProbe: {}
  readinessProbe: {}
  lifecycle: {}
  terminationGracePeriodSeconds: 30
  nodeSelector: {}
  tolerations: []
  affinity: {}
  additionalConfigFiles: {}
  additionalVolumes: []
  additionalVolumeMounts: []
  annotations: {}
  labels: {}
  configMounts: []
  secretMounts: []

kafka:
  mountPath: "/etc/trino/schemas"
  tableDescriptions: {}

commonLabels: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  tls: []
